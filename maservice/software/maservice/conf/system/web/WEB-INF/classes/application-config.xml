<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans default-lazy-init="false" default-dependency-check="none" default-autowire="no">

	<bean name="ApplicationServiceImpl" class="gov.nih.nci.system.applicationservice.impl.MaApplicationServiceImpl" singleton="true">
		<constructor-arg ref="ClassCache" index="0"></constructor-arg>
	</bean>

	<!-- Bean Definitions -->
	<bean name="ClassCache" class="gov.nih.nci.system.util.ClassCache" singleton="true">
		<property name="daoList">
			<list>
				<!--  Add any DAO's here -->
				<ref bean="ORMDAO" />
			</list>
		</property>
	</bean>


	<bean name="WebSystemProperties" class="java.util.Properties">
		<constructor-arg>
			<props>
				<prop key="jsonOutputFormatter">jsonOutputFormatter.xsl</prop>
				<prop key="resultOutputFormatter">resultOutputFormatter.xsl</prop>
				<prop key="rowCounter">200</prop>
				<prop key="securityEnabled">false</prop>
				<prop key="enableISO21090DataTypes">true</prop>
				<prop key="enableRestfulHtmlInterface">false</prop>
			</props>
		</constructor-arg>
	</bean>

	<bean name="ORMDAO" class="gov.nih.nci.system.dao.orm.ORMDAOImpl">
		<property name="caseSensitive" value="false" />
		<property name="resultCountPerQuery" value="1000" />
		<property name="securityHelper">
			<ref bean="SecurityInitializationHelper" />
		</property>
		<property name="sessionFactory" ref="SessionFactory" />
		<property name="config">
			<bean factory-bean="HibernateConfigHolder" factory-method="getConfiguration" />
		</property>
	</bean>

	<bean name="HibernateConfigHolder" class="gov.nih.nci.system.dao.orm.HibernateConfigurationHolder" />

	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />
	
	<bean name="SessionFactory" class="gov.nih.nci.system.dao.orm.SessionFactoryBean">
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
		<property name="configHolder" ref="HibernateConfigHolder" />
		<property name="securityHelper" ref="SecurityInitializationHelper"/>
		<property name="lobHandler" ref="defaultLobHandler"/>
		<property name="entityInterceptor">
			<bean class="gov.nih.nci.security.authorization.attributeLevel.GenericSecurityInterceptor">
				<constructor-arg>
					<list>
						<bean class="org.hibernate.EmptyInterceptor"/>
						<!--
						<bean class="gov.nih.nci.security.authorization.attributeLevel.AttributeSecuritySessionInterceptor">
							<constructor-arg value="false"/>
						</bean>
						-->
						<!--<bean class="gov.nih.nci.logging.api.logger.hibernate.ObjectStateInterceptor"/>-->
					</list>		
				</constructor-arg>
			</bean>
		</property>
		<property name="eventListeners">
			<map>
				<!--
				<entry key="pre-insert">
					<bean class="org.hibernate.validator.event.ValidateEventListener" />
				</entry>
				<entry key="pre-update">
					<bean class="org.hibernate.validator.event.ValidateEventListener" />
				</entry>
				-->
			</map>
		</property>
	</bean>

	<bean name="SecurityInitializationHelper" class="gov.nih.nci.system.security.helper.SecurityInitializationHelper">
		<property name="securityEnabled" value="false"/>
		<property name="instanceLevelSecurityEnabled" value="false"/>
		<property name="attributeLevelSecurityEnabled" value="false"/>
		<!--
		<property name="authorizationManager">
			<bean factory-bean="userDetailsService" factory-method="authorizationManagerInstance" />
		</property>
		-->
	</bean>

	<bean id="HibernateTransactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="SessionFactory" />
	</bean>

	<bean id="TxInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="HibernateTransactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="execute*">
					PROPAGATION_REQUIRED,-gov.nih.nci.system.applicationservice.ApplicationException,-gov.nih.nci.system.dao.DAOException
				</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="ApplicationService" class="org.springframework.aop.framework.ProxyFactoryBean" singleton="false">
		<property name="target" ref="ApplicationServiceImpl" />
		<property name="interfaces" value="gov.nih.nci.system.applicationservice.MaApplicationService" />
		<property name="interceptorNames">
			<list>
				<idref local="TxInterceptor" />
				<!--<idref local="CLMInterceptor" />-->
			</list>
		</property>
	</bean>

	<!--<bean id="CLMInterceptor" class="gov.nih.nci.system.client.proxy.CLMProxy"/>-->
</beans>