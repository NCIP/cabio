SDK_INSTALL_DIR=../../sdk-toolkit

################################################################################## 
#  MODEL PROPERTIES
#
#  MODEL_FILE: specifies the name of the file which contains the object/data  
#  model.  SDK users should modify this property to reflect their own model file 
#  name.  The file must be placed under the \models directory.
#
#  MODEL_FILE_TYPE: specifies whether the object/data model file was created
#  using Enterprise Architect (EA) or ArgoUML (ARGO).
# 
#  LOGICAL_MODEL: specifies the name of the base package within the object/data 
#  model that contains the logical model data.
#
#  DATA_MODEL: specifies the name of the base package within the object/data model
#  that contains the data model data.
#
#  INCLUDE_PACKAGE: specifies the regular expression (java.util.regex) pattern(s) 
#  of any fully qualified package names within the object/data model that should be 
#  processed by the code generator. Separate patterns with a comma (',') as a delimiter.
#  NOTE:  This property applies only to original package names as defined within the
#  UML Logical Model, and NOT to any GME Namespace package name(s) that may be present 
#  in the model as Tag Values.
#
#  EXCLUDE_PACKAGE: specifies the regular expression (java.util.regex) pattern(s) of  
#  the fully qualified package name(s) within the object/data model that should be 
#  ignored (not processed) by the code generator.  Use a comma (',') as a delimiter to 
#  separate patterns.  Note:  All packages are first filtered (constrained) by the 
#  INCLUDE_PACKAGE property value, and then further filtered by the EXCLUDE_* values.
#  NOTE:  This property applies only to original package names as defined within the
#  UML Logical Model, and NOT to any GME Namespace package name(s) that may be present 
#  in the model as Tag Values.
#
#  EXCLUDE_NAME: specifies the regular expression (java.util.regex) pattern(s) of the 
#  fully qualified class name(s) within the object/data model that should be ignored 
#  (not processed) by the code generator.  Use a comma (',') as a delimiter to separate 
#  patterns.  NOTE:  This property applies only to original fully qualified class names  
#  as defined within the UML Logical Model class names, and NOT to any GME Namespace   
#  class name(s) that may be present in the model as Tag Values.
#
#  EXCLUDE_NAMESPACE: specifies the regular expression (java.util.regex) namespace 
#  pattern of the fully qualified package name(s)  within the object/data model that 
#  should be ignored (not processed) by the code generator.  Use a comma (',') as a 
#  delimiter to separate patterns.  NOTE:  Unlike the previous three properties, this 
#  property applies ONLY to any GME Namespace values that may be present in the model as 
#  Tag Values.  In this case, the original NAMESPACE_PREFIX property defined within this 
#  file is effectively "overriden".
#
#  NOTE:  As of SDK 4.1, The INCLUDE and EXCLUDE properties above now use java.util.regex 
#		  patterns.  For details on creating regular expression patterns, see 
#         http://java.sun.com/j2se/1.4.2/docs/api/java/util/regex/Pattern.html. 
#		    
#         Also, patterns are matched against the fully qualified class name 
#         (or namespace in the case of the EXCLUDE_NAMESPACE property), so be sure 
#         to use patterns that take this into account.  As an example, the 
#         INCLUDE_PACKAGE used to have a default value of 'domain', it has now been 
#         changed to '.*?domain.*' so that it matches classes found in packages such
#         as gov.nih.nci.cacoresdk.domain.inheritance.abstrakt.*.  Note the use
#         of the '?' symbol before the actual package name; this is necessary
#         as the '*' symbol is greedy, and would otherwise consume the entire fully
#         qualified class name, causing the match to fail.
##################################################################################
#MODEL_FILE=sdk.uml
#MODEL_FILE_TYPE=ARGO
MODEL_FILE=sdk.xmi
MODEL_FILE_TYPE=EA

LOGICAL_MODEL=Logical View.Logical Model
DATA_MODEL=Logical View.Data Model
INCLUDE_PACKAGE=.*
EXCLUDE_PACKAGE=.*?java.*,.*?[V|v]alue.?[D|d]omain.*,.*?iso21090.*
EXCLUDE_NAME=
EXCLUDE_NAMESPACE=

##################################################################################
#  PROJECT PROPERTIES
#
#  PROJECT_NAME: used to create/name: 
#		1) Output project directory folder name
#		2) Beans JAR file name
#		3) ORM JAR file name
#  		4) Client JAR file name
#		5) WAR file name
#		6) Web Service Namespace
#		7) Documentation title in the generated API (Javadocs)
#
#  NAMESPACE_PREFIX: used to create:
#		1) XSD's (Schema's) 
#		2) XML Mapping and Unmapping files.
#       3) Locate the UML Project in caDSR when adding Hibernate Validator
#          annotations in generated domain objects.  Use format:
#		   gme://<<Classification Scheme (UML Project ShortName)>>.<<Context>>/
#          <<Classification Scheme Version>>/<<<Classification Scheme Item> (Optional)>>
#
#  NOTE:  If XSDs are to be used for the caGRID, the value of the NAMESPACE_PREFIX 
#  should be the same as the GME namespace value.
# 
#  WEBSERVICE_NAME: used to create the:
#		1) Web service name in the Web Services deployment descriptor (WSDD). 
#		2) Web service URL, which uses the Web service name as a suffix 
#          (i.e., ${SERVER_URL}/services/${WEBSERVICE_NAME})
#
##################################################################################
PROJECT_NAME=maservice
NAMESPACE_PREFIX=gme://caCORE.caCORE/3.2/
WEBSERVICE_NAME=${PROJECT_NAME}Service

##################################################################################
#  PROJECT SECURITY PROPERTIES
#
#  ENABLE_SECURITY: Used to enable or disable security within the generated system 
#  during code generation.  This applies to all of the SDK interfaces, including:
#	1) Web Interface (GUI)
#	2) Java API Interface (local and remote clients)
#	3) Writable API
#	4) Web Service Interface
#
#  ENABLE_CLASS_LEVEL_SECURITY: used to enable/disable CSM class level security.
#  Only relevant if SECURITY_ENABLED property is set to 'true'.
#
#  ENABLE_INSTANCE_LEVEL_SECURITY: used to enable/disable CSM instance level security.
#  Only relevant if SECURITY_ENABLED property is set to 'true'.
#
#  ENABLE_ATTRIBUTE_LEVEL_SECURITY: used to enable/disable CSM attribute level
#  security.  Only relevant if SECURITY_ENABLED property is set to 'true'.
#
#  CSM_PROJECT_NAME: used as a prefix when creating the:
#		1) CSM security configuration file name
#
#  NOTE:  CSM_PROJECT_NAME value must match the project application name used when
#         setting up security using CSM's UPT
#
#  CACHE_PROTECTION_ELEMENTS: indicates whether or not CSM Protection Elements
#  should be cached
##################################################################################
ENABLE_SECURITY=false
ENABLE_CLASS_LEVEL_SECURITY=false
ENABLE_INSTANCE_LEVEL_SECURITY=false
ENABLE_ATTRIBUTE_LEVEL_SECURITY=false
CSM_PROJECT_NAME=sdk
CACHE_PROTECTION_ELEMENTS=false

##################################################################################
#  CAGRID AUTHENTICATION PROPERTIES
#
##################################################################################
SDK_GRID_LOGIN_SERVICE_NAME=SDKGridLoginService
ENABLE_GRID_LOGIN_MODULE=false
ENABLE_CSM_LOGIN_MODULE=true
CAGRID_LOGIN_MODULE_NAME=grid

##################################################################################
#  WRITABLE API PROPERTIES
# 
#  ENABLE_WRITABLE_API_EXTENSION: if set to "true" or "yes", will change the
#  service interface and corresponding implementation for the Writable API.
#  Only relevant if the Writable API extension is enabled.
#
#  DATABASE_TYPE: A suffix appended to certain tag value keys (e.g., 
#  NCI_GENERATOR.<database-type>, NCI_GENERATOR_PROPERTY.<database-type>) added
#  to the primary key columns within the UML model.  The tag values are used by  
#  the Hibernate Mapping file transformer to generate primary key settings for a 
#  given class.  The database-type suffix is necessary when supporting multiple 
#  databases through the same UML model.  Only relevant if the Writable API 
#  extension is enabled.
#
#  IDENTITY_GENERATOR_TAG:  if using system-wide primary key generator settings,
#  the value for the primary key generator class.  Only relevant if the Writable 
#  API extension is enabled.
#
#  CADSR_CONNECTION_URL: if set, will override the default connection provided in 
#  the caDSR application-config-client.xml file, located under 
#  /conf/codegen/validator. Used when generating Hibernate Validator 
#  annotations containing caDSR Permissible Value enumeration(s) for a given 
#  domain object attribute.  Only relevant if the Writable API extension is enabled.
#  
#  ENABLE_COMMON_LOGGING_MODULE:  if set to "true" or "yes", will enable the Common
#  Logging Module (CLM).  Only valid if the Writable API extension is enabled.
#
#  CLM_PROJECT_NAME: used to populated the CLM logging table (LOG_MESSAGE) 
#  application column. Only valid if CLM and the Writable API are both enabled.
##################################################################################
ENABLE_WRITABLE_API_EXTENSION=false
DATABASE_TYPE=oracle
IDENTITY_GENERATOR_TAG=<generator class="assigned"/>
CADSR_CONNECTION_URL=http://cadsrapi.nci.nih.gov/cadsrapi40
ENABLE_COMMON_LOGGING_MODULE=true
CLM_PROJECT_NAME=${PROJECT_NAME}
##################################################################################
#  SDK Interface Generation Settings - Set to "true" or "yes" to generate the given 
#  interface.  Any other value will cause the given interface to NOT be generated
##################################################################################
ENABLE_LOCAL_JAVA_INTERFACE=true
ENABLE_REMOTE_JAVA_INTERFACE=true
ENABLE_WEBSERVICE_INTERFACE=false
ENABLE_RESTFUL_XML_INTERFACE =false
ENABLE_RESTFUL_HTML_INTERFACE=false
ENABLE_RESTFUL_JSON_INTERFACE=false
##################################################################################
#  CODE GENERATION OPTIONS
#
#  The following properties are used to enable or disable code generation step(s). 
#  These properties accept values of either 'true' or 'false'. Setting the value 
#  to 'false' for a component disables the code generation of that component, while
#  setting the value to 'true' enables it
#
#  VALIDATE_LOGICAL_MODEL 	if enabled checks for the validity of the object model
#  VALIDATE_MODEL_MAPPING 	if enabled checks for the validity of the object to 
#                         	database mapping 
#  GENERATE_HIBERNATE_MAPPING if enabled generates Hibernate related artifacts
#  GENERATE_BEANS 			if enabled, generates Java beans from the object model
#  GENERATE_CASTOR_MAPPING 	if enabled, generates castor mapping files for the 
#                          	object model
#  GENERATE_JAXB_MAPPING	if enabled, generates JAXB mapping files and related    
#                          	domain object (POJO) annotations for the object model
#  GENERATE_XSD 			if enabled, generates the XSD and XML Mapping files
#  GENERATE_WSDD 			if enabled, generates the Web Services Deployment  
#                 			Descriptor (WSDD) file
#  GENERATE_HIBERNATE_VALIDATOR
#				 			if enabled, will generate Hibernate Validator  
#                 			annotations using caDSR Permissible Values to create
#							an enumeration of valid values.  Annotations are 
#							added during code generation to domain object
#							attributes.  At runtime, the value of domain object 
#							attributes containing annotations will be validated
#							prior to insert or update.  This setting is only
#							valid if the Writable API extension 
#							(ENABLE_WRITABLE_API_EXTENSION) and security 
#							(ENABLE_SECURITY) properties are enabled as well.
# GENERATE_XSD_WITH_GME_TAGS
#                           Whether or not GME Namespace tag values should be used
#							when generating Castor Mapping and XSD files.  For 
#							more information, see GME Namespace Wiki: 
#							https://wiki.nci.nih.gov/display/caCORE/GME+Namespace
# GENERATE_XSD_WITH_PERMISSIBLE_VALUES
#                           Whether or not caDSR Permissible Values should be used
#							as restriction/enumeration elements for a given 
#                           attribute of a class when generating XSD files.
#							This setting is only valid if generate XSD 
#							(GENERATE_XSD) property is enabled as well.
##################################################################################
VALIDATE_LOGICAL_MODEL=true
VALIDATE_MODEL_MAPPING=true
VALIDATE_GME_TAGS=false
GENERATE_HIBERNATE_MAPPING=true
GENERATE_BEANS=true
GENERATE_CASTOR_MAPPING=false
GENERATE_JAXB_MAPPING=true
GENERATE_XSD=true
GENERATE_XSD_WITH_GME_TAGS=false
GENERATE_XSD_WITH_PERMISSIBLE_VALUES=false
GENERATE_WSDD=false
GENERATE_HIBERNATE_VALIDATOR=false
ENABLE_ISO21090_DATATYPES=true
##################################################################################
# DAO_PAGE_SIZE				Maximum number of records to retrieve for each query 
#						   	from database.if DAO_PAGE_SIZE < 0 pagination is disabled.	
# RESTFUL_PAGE_SIZE        	Maximum number of records to retrieve for each RESTful API
#						   	query (XML, HTML, JSON)
##################################################################################
DAO_PAGE_SIZE=1000
RESTFUL_PAGE_SIZE=200