<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>load_location</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
    </parameters>
    <log>
      <read/>
      <write/>
      <input/>
      <output/>
      <update/>
      <rejected/>
      <connection/>
      <table/>
      <step_performance_table/>
      <use_batchid>Y</use_batchid>
      <use_logfield>N</use_logfield>
      <size_limit_lines/>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <modified_user>-</modified_user>
  <modified_date>2010&#47;08&#47;18 15:50:45.686</modified_date>
  </info>
  <notepads>
  </notepads>
  <connection>
    <name>cabio</name>
    <server>${cabio_db_host_name}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${cabio_db_name}</database>
    <port>${cabio_db_port_number}</port>
    <username>${cabio_db_username}</username>
    <password>${cabio_db_password}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>${cabio_db_port_number}</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  </order>
  <step>
    <name>Execute SQL script</name>
    <type>ExecSQL</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>cabio</connection>
    <execute_each_row>N</execute_each_row>
    <replace_variables>N</replace_variables>
    <sql> INSERT INTO ma_physical_location(id, chromosome_id, start_coordinate, end_coordinate, orientation)
 select id, chromosome_id, start_coordinate, end_coordinate, orientation from zstg_ma_physical_location;

 
 
 INSERT INTO ma_physical_location(id, chromosome_id, start_coordinate, end_coordinate, array_reporter_id)
 SELECT ma_physical_location_pk.NEXTVAL,  c.id, l.CHROMOSOMAL_START_POSITION, l.chromosomal_end_position,  array_reporter_id
     from location_ch_43 l,  ma_chromosome c, ma_genome gm, chromosome cc
  where discriminator = &apos;ArrayReporterPhysicalLocation&apos;
  and c.organism_id = 5 and substr(assembly, 0, instr(assembly, &apos;,&apos;)-1 ) = gm.ASSEMBLY_SOURCE
 and substr(assembly,  instr(assembly, &apos;,&apos;) +1, length(assembly) - instr(assembly, &apos;,&apos;) )=gm.ASSEMBLY_VERSION
 and gm.id = c.genome_id and l.CHROMOSOME_ID = cc.chromosome_id and c.name = cc.chromosome_number;
 


 INSERT INTO ma_rel_location_feature(feature_id, location_id)
 select gene_id, id from zstg_ma_physical_location where gene_id is not null;


 
 INSERT INTO ma_rel_location_feature(feature_id, location_id)
 select snp_id, id from zstg_ma_physical_location where snp_id is not null;

</sql>
    <insert_field/>
    <update_field/>
    <delete_field/>
    <read_field/>
    <arguments>
    </arguments>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>148</xloc>
      <yloc>119</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
