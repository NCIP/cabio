
SQL*Plus: Release 10.2.0.1.0 - Production on Wed May 6 17:24:31 2009

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


SQL*Plus: Release 10.2.0.1.0 - Production on Wed May 6 17:24:31 2009

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


SQL*Plus: Release 10.2.0.1.0 - Production on Wed May 6 17:24:31 2009

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


SQL*Plus: Release 10.2.0.1.0 - Production on Wed May 6 17:24:31 2009

Copyright (c) 1982, 2005, Oracle.  All rights reserved.


Connected to:
Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options


Connected to:
Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options


Connected to:
Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options


Connected to:
Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options


Connected to:
Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options


Table truncated.

SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints.sql transcript_array_reporter
SQL> rem -----------------------------------------------------------------------
> rem Filename:	constraints.sql
SQL> rem Purpose:	Script to spool a listing of all disable and enable constraints statements
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 800;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints/transcript_array_reporter.disable.sql
SQL> 
SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable constraint SYS_C0021193;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable constraint SYS_C004805;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable constraint SYS_C004806;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable constraint SYS_C004807;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable constraint SYS_C004808;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable constraint XSCRIPTARRREP;

Table altered.

SQL> 
SQL> alter table TRANSCRIPT_ARRAY_REPORTER disable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/transcript_array_reporter.drop.sql
SQL> 
SQL> drop index TRANSCRTER_BIG_ID_LWR;

Index dropped.

SQL> drop index TRANSCRTER_BIG_ID;

Index dropped.

SQL> drop index SYS_C0021193_IDX;

Index dropped.

SQL> drop index TRANSCRIRTER_NAME_LWR;

Index dropped.

SQL> drop index TRANSCRIRTER_MICROARRAY;

Index dropped.

SQL> drop index TRANSCRIRTER_ID;

Index dropped.

SQL> drop index TRANSCRIRTER_NAME;

Index dropped.

SQL> 
SQL> --EXIT;
SQL> INSERT
  2  INTO transcript_array_reporter (ID, NAME, microarray_ID, BIG_ID) SELECT ID, NAME
  3  									       ,
  4  								microarray_ID, BIG_ID
  5  					 FROM (SELECT ID, NAME, microarray_ID, BIG_ID
  6  		FROM expression_reporter UNION SELECT ID, NAME, microarray_ID, BIG_ID
  7  								 FROM exon_reporter);

Table truncated.

SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints.sql array_reporter
SQL> rem -----------------------------------------------------------------------
> rem Filename:	constraints.sql
SQL> rem Purpose:	Script to spool a listing of all disable and enable constraints statements
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 800;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints/array_reporter.disable.sql
SQL> 
SQL> alter table ARRAY_REPORTER disable constraint SYS_C0021036;

Table altered.

SQL> alter table ARRAY_REPORTER disable constraint SYS_C004158;

Table altered.

SQL> alter table ARRAY_REPORTER disable constraint SYS_C004159;

Table altered.

SQL> alter table ARRAY_REPORTER disable constraint SYS_C004160;

Table altered.

SQL> 
SQL> alter table ARRAY_REPORTER disable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/array_reporter.drop.sql
SQL> 
SQL> drop index SYS_C0021036_IDX;

Index dropped.

SQL> drop index ARRAY_RERTER_NAME_LWR;

Index dropped.

SQL> drop index ARRAY_RERTER_MICROARRAY;

Index dropped.

SQL> drop index ARRAY_RERTER_NAME;

Index dropped.

SQL> drop index ARRAY_RERTER_ID;

Index dropped.

SQL> drop index ARRAY_REP_BIGID_LWR;

Index dropped.

SQL> drop index ARRAY_RTER_BIG_ID;

Index dropped.

SQL> 
SQL> --EXIT;
SQL> INSERT
  2   INTO array_reporter (ID, NAME, microarray_ID, BIG_ID) SELECT DISTINCT ID, NAME,
  3  								microarray_ID, BIG_ID
  4  					 FROM (SELECT ID, NAME, microarray_ID, BIG_ID
  5  		FROM expression_reporter UNION SELECT ID, NAME, microarray_ID, BIG_ID
  6  		       FROM snp_reporter UNION SELECT ID, NAME, microarray_ID, BIG_ID
  7  								 FROM exon_reporter);

Table truncated.

SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints.sql relative_location
SQL> rem -----------------------------------------------------------------------
> rem Filename:	constraints.sql
SQL> rem Purpose:	Script to spool a listing of all disable and enable constraints statements
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 800;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints/relative_location.disable.sql
SQL> 
SQL> alter table RELATIVE_LOCATION disable constraint SYS_C004713;

Table altered.

SQL> alter table RELATIVE_LOCATION disable constraint SYS_C004714;

Table altered.

SQL> alter table RELATIVE_LOCATION disable constraint SYS_C004715;

Table altered.

SQL> alter table RELATIVE_LOCATION disable constraint RCHBIGID;

Table altered.

SQL> 
SQL> alter table RELATIVE_LOCATION disable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/relative_location.drop.sql
SQL> 
SQL> drop index RELATIVION_BIG_ID;

Index dropped.

SQL> drop index RELATIVETION_DISTANCE_LWR;

Index dropped.

SQL> drop index RELATIVETION_ORIENTATIO_LWR;

Index dropped.

SQL> drop index RELATIVETION_SNP_ID;

Index dropped.

SQL> drop index RELATIVETION_DISTANCE;

Index dropped.

SQL> drop index RELATIVETION_ORIENTATIO;

Index dropped.

SQL> drop index RELATIVETION_ID;

Index dropped.

SQL> drop index REL_LOC_BIGID_LWR;

Index dropped.

SQL> 
SQL> --EXIT;
SQL> INSERT
  2    INTO relative_location (ID, ORIENTATION, SNP_ID, DISTANCE, BIG_ID) SELECT
  3  				   DISTINCT ID, ORIENTATION, SNP_ID, DISTANCE, BIG_ID
  4  			       FROM (SELECT ID, ORIENTATION, SNP_ID, DISTANCE, BIG_ID
  5  	FROM marker_relative_location UNION SELECT ID, ORIENTATION, SNP_ID, DISTANCE,
  6  									       BIG_ID
  7  							FROM gene_relative_location);

Table truncated.


1873935 rows created.

SQL> 
SQL> COMMIT;

Commit complete.

SQL> CREATE INDEX TRANSARREP_BIGID_IDX ON transcript_array_reporter(BIG_ID);

Table truncated.

SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints.sql relative_location_ch
SQL> rem -----------------------------------------------------------------------
> rem Filename:	constraints.sql
SQL> rem Purpose:	Script to spool a listing of all disable and enable constraints statements
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 800;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints/relative_location_ch.disable.sql
SQL> 
SQL> alter table RELATIVE_LOCATION_CH disable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH disable constraint SYS_C004718;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH disable constraint SYS_C004719;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH disable constraint SYS_C004720;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH disable constraint SYS_C004721;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH disable constraint SYS_C004722;

Table altered.

SQL> 
SQL> alter table RELATIVE_LOCATION_CH disable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/relative_location_ch.drop.sql
SQL> 
SQL> drop index RELATIVEN_CH_SNP_ID;

Index dropped.

SQL> drop index RELATIVEN_CH_DISTANCE;

Index dropped.

SQL> drop index RELATIVEN_CH_ORIENTATIO;

Index dropped.

SQL> drop index RELATIVEN_CH_TYPE;

Index dropped.

SQL> drop index RELATIVEN_CH_ID;

Index dropped.

SQL> drop index RELATIVEN_CH_DISCRIMINA_LWR;

Index dropped.

SQL> drop index RELATIVEN_CH_PROBE_SET__LWR;

Index dropped.

SQL> drop index RELATIVEN_CH_DISTANCE_LWR;

Index dropped.

SQL> drop index RELATIVEN_CH_ORIENTATIO_LWR;

Index dropped.

SQL> drop index RELATIVEN_CH_TYPE_LWR;

Index dropped.

SQL> drop index RELATIVE_LOC_BIGID_LWR;

Index dropped.

SQL> drop index RELATIV_CH_BIG_ID;

Index dropped.

SQL> drop index SYS_C0021179_IDX;

Index dropped.

SQL> drop index RELATIVEN_CH_DISCRIMINA;

Index dropped.

SQL> drop index RELATIVEN_CH_GENE_ID;

Index dropped.

SQL> drop index RELATIVEN_CH_PROBE_SET_;

Index dropped.

SQL> 
SQL> --EXIT;
SQL> 
SQL> INSERT
  2  INTO relative_location_ch (ID, ORIENTATION, TYPE, DISTANCE, SNP_ID, PROBE_SET_ID
  3  ,
  4   BIG_ID, DISCRIMINATOR) SELECT DISTINCT ID, ORIENTATION, TYPE, DISTANCE, SNP_ID,
  5  		      PROBE_SET_ID, BIG_ID, 'MarkerRelativeLocation' AS DISCRIMINATOR
  6  				FROM marker_relative_location;
CREATE INDEX TRANSARREP_BIGID_IDX ON transcript_array_reporter(BIG_ID)
                                     *
ERROR at line 1:
ORA-01950: no privileges on tablespace 'USERS'


SQL> @$LOAD/indexes/transcript_array_reporter.cols.sql
SQL> 
SQL> create index TRANSCRIRTER_ID on TRANSCRIPT_ARRAY_REPORTER(ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

3051906 rows created.

SQL> COMMIT;

Commit complete.

SQL> CREATE INDEX ARRAY_REP_BIGID ON array_reporter(BIG_ID) TABLESPace cabio_fut;

Index created.

SQL> create index TRANSCRIRTER_NAME on TRANSCRIPT_ARRAY_REPORTER(NAME) PARALLEL NOLOGGING tablespace CABIO_FUT;

Table truncated.

SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/indexer_new.sql array_reporter_ch
SQL> rem -----------------------------------------------------------------------
> rem Filename:	indexer_new.sql
SQL> rem Purpose:	Script to generate drop and create index scripts
SQL> rem Notes:	Will build all non-sys/system indexes
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 300;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints.sql zstg_array_reporter_ch
SQL> rem -----------------------------------------------------------------------
> rem Filename:	constraints.sql
SQL> rem Purpose:	Script to spool a listing of all disable and enable constraints statements
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 800;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints.sql array_reporter_ch
SQL> rem -----------------------------------------------------------------------
> rem Filename:	constraints.sql
SQL> rem Purpose:	Script to spool a listing of all disable and enable constraints statements
SQL> rem Author:	Anonymous
SQL> rem -----------------------------------------------------------------------
> 
SQL> set linesize 800;
SQL> set pagesize 10000;
SQL> set long 50;
SQL> set trimspool on;
SQL> set termout off;
SQL> set feedback on;
SQL> set heading on;
SQL> set verify on;
SQL> 
SQL> --exit;
SQL> @$LOAD/constraints/zstg_array_reporter_ch.disable.sql
SQL> 
SQL> alter table ZSTG_ARRAY_REPORTER_CH disable constraint SYS_C004837;

Table altered.

SQL> alter table ZSTG_ARRAY_REPORTER_CH disable constraint SYS_C004838;

Table altered.

SQL> alter table ZSTG_ARRAY_REPORTER_CH disable constraint SYS_C004839;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/array_reporter_ch.disable.sql
SQL> 
SQL> alter table ARRAY_REPORTER_CH disable constraint SYS_C0021037;

Table altered.

SQL> alter table ARRAY_REPORTER_CH disable constraint SYS_C004162;

Table altered.

SQL> alter table ARRAY_REPORTER_CH disable constraint SYS_C004163;

Table altered.

SQL> alter table ARRAY_REPORTER_CH disable constraint SYS_C004164;

Table altered.

SQL> alter table ARRAY_REPORTER_CH disable constraint SYS_C004165;

Table altered.

SQL> alter table ARRAY_REPORTER_CH disable constraint ARREPBIGID;

Table altered.

SQL> 
SQL> alter table ARRAY_REPORTER_CH disable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/zstg_array_reporter_ch.drop.sql
SQL> 
SQL> drop index ZSTG_AR_CH_BIG_ID_LWR;

Index dropped.

SQL> drop index ZSTG_AR_CH_BIG_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_ORIG_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_ASSEMBLY;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_END_CYTOID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_START_CYTO;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_CHROMOSOME;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_CYTO_STOP;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_CYTO_START;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_CHR_STOP;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_CHR_START;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_EXON_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_TRANSCRIPT;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_GENE_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_NAS_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_SNP_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_STRAND;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_PROBE_COUN;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_MANUFACTUR;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_PHAST_CONS;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_TARGET_DES;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_TARGET_ID;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_SEQUENCE_S;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_SEQUENCE_T;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_DISCRIMINA;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_MICROARRAY;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_NAME;

Index dropped.

SQL> drop index ZSTG_ARRR_CH_ID;

Index dropped.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/array_reporter_ch.drop.sql
SQL> 
SQL> drop index ARRAY_RER_CH_SEQUENCE_S_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_SEQUENCE_T_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_DISCRIMINA_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_NAME_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_EXON_ID;

Index dropped.

SQL> drop index ARRAY_RER_CH_TRANSCRIPT;

Index dropped.

SQL> drop index ARRAY_RER_CH_GENE_ID;

Index dropped.

SQL> drop index ARRAY_RER_CH_NAS_ID;

Index dropped.

SQL> drop index ARRAY_RER_CH_SNP_ID;

Index dropped.

SQL> drop index ARRAY_RER_CH_STRAND;

Index dropped.

SQL> drop index ARRAY_RER_CH_PROBE_COUN;

Index dropped.

SQL> drop index ARRAY_RER_CH_MANUFACTUR;

Index dropped.

SQL> drop index ARRAY_RER_CH_PHAST_CONS;

Index dropped.

SQL> drop index ARRAY_RER_CH_TARGET_DES;

Index dropped.

SQL> drop index ARRAY_RER_CH_TARGET_ID;

Index dropped.

SQL> drop index ARRAY_RER_CH_SEQUENCE_S;

Index dropped.

SQL> drop index ARRAY_RER_CH_SEQUENCE_T;

Index dropped.

SQL> drop index ARRAY_RER_CH_DISCRIMINA;

Index dropped.

SQL> drop index ARRAY_RER_CH_MICROARRAY;

Index dropped.

SQL> drop index ARRAY_RER_CH_NAME;

Index dropped.

SQL> drop index ARRAY_RER_CH_ID;

Index dropped.

SQL> drop index AR_REP_CH_BIGID_LWR;

Index dropped.

SQL> drop index AR_REP_CH_BIGID;

Index dropped.

SQL> drop index SYS_C0021037_IDX;

Index dropped.

SQL> drop index ARRAY_RER_CH_STRAND_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_PROBE_COUN_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_MANUFACTUR_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_PHAST_CONS_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_TARGET_ID_LWR;

Index dropped.

SQL> drop index ARRAY_RER_CH_TARGET_DES_LWR;

Index dropped.

SQL> 
SQL> --EXIT;
SQL> 
SQL> @createCytoArrayTables.sql
SQL> DROP TABLE zstg_startexprarrayrepcytoids;

Table dropped.

SQL> DROP TABLE zstg_endexprarrayrepcytoids;

Table dropped.

SQL> 
SQL> CREATE TABLE zstg_startexprarrayrepcytoids TABLESPace cabio_map_fut AS SELECT
  2  		     DISTINCT A.ID, A.CYTO_START, B.ID AS cytobandID, A.chromosome_ID
  3  					  FROM zstg_expression_reporter A, cytoband B
  4  	WHERE TRIM(LOWER(A.CYTO_START)) = TRIM(LOWER(B.NAME)) AND A.chromosome_ID =
  5  			   B.chromosome_ID AND TRIM(LOWER(A.CYTO_START)) IS NOT NULL;

Index created.

SQL> CREATE INDEX ARRAY_REP_BIGID_LWR ON array_reporter(LOWER(BIG_ID)) TABLESPace
  2  cabio_fut;

Table created.

SQL> 
SQL> CREATE TABLE zstg_endexprarrayrepcytoids TABLESPace cabio_map_fut AS SELECT DISTINCT
  2  			       A.ID, A.CYTO_STOP, B.ID AS cytobandID, A.chromosome_ID
  3  					  FROM zstg_expression_reporter A, cytoband B
  4  	 WHERE TRIM(LOWER(A.CYTO_STOP)) = TRIM(LOWER(B.NAME)) AND A.chromosome_ID =
  5  								     B.chromosome_ID;

Table created.

SQL> 
SQL> 
SQL> CREATE INDEX STARTA1 ON zstg_startexprarrayrepcytoids(ID) TABLESPace cabio_map_fut;

Index created.

SQL> CREATE INDEX STARTA2 ON zstg_startexprarrayrepcytoids(CYTO_START) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> CREATE INDEX STARTA3 ON zstg_startexprarrayrepcytoids(cytobandID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> CREATE INDEX STARTA4 ON zstg_startexprarrayrepcytoids(chromosome_ID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> CREATE INDEX ENDA1 ON zstg_endexprarrayrepcytoids(ID) TABLESPace cabio_map_fut;

Index created.

SQL> CREATE INDEX ENDA2 ON zstg_endexprarrayrepcytoids(CYTO_STOP) TABLESPace cabio_map_fut
  2  ;

Index created.

SQL> CREATE INDEX ENDA3 ON zstg_endexprarrayrepcytoids(cytobandID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> CREATE INDEX ENDA4 ON zstg_endexprarrayrepcytoids(chromosome_ID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> 
SQL> DROP TABLE zstg_startsnparrayrepcytoids;

Table dropped.

SQL> DROP TABLE zstg_endsnparrayrepcytoids;

Table dropped.

SQL> 
SQL> CREATE TABLE zstg_startsnparrayrepcytoids TABLESPace cabio_map_fut AS SELECT DISTINCT
  2  			      A.ID, A.CYTO_START, B.ID AS cytobandID, A.chromosome_ID
  3  						 FROM zstg_snp_reporter A, cytoband B
  4  	WHERE TRIM(LOWER(A.CYTO_START)) = TRIM(LOWER(B.NAME)) AND A.chromosome_ID =
  5  								     B.chromosome_ID;

Table created.

SQL> 
SQL> CREATE TABLE zstg_endsnparrayrepcytoids TABLESPace cabio_map_fut AS SELECT DISTINCT
  2  			       A.ID, A.CYTO_STOP, B.ID AS cytobandID, A.chromosome_ID
  3  						 FROM zstg_snp_reporter A, cytoband B
  4  	 WHERE TRIM(LOWER(A.CYTO_STOP)) = TRIM(LOWER(B.NAME)) AND A.chromosome_ID =
  5  								     B.chromosome_ID;

Table created.

SQL> 
SQL> CREATE INDEX STARTS1 ON zstg_startsnparrayrepcytoids(ID) TABLESPace cabio_map_fut;

Index created.

SQL> CREATE INDEX STARTS2 ON zstg_startsnparrayrepcytoids(CYTO_START) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> CREATE INDEX STARTS3 ON zstg_startsnparrayrepcytoids(cytobandID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> CREATE INDEX STARTS4 ON zstg_startsnparrayrepcytoids(chromosome_ID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> create index TRANSCRIRTER_MICROARRAY on TRANSCRIPT_ARRAY_REPORTER(MICROARRAY_ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> CREATE INDEX ENDS1 ON zstg_endsnparrayrepcytoids(ID) TABLESPace cabio_map_fut;

Index created.

SQL> CREATE INDEX ENDS2 ON zstg_endsnparrayrepcytoids(CYTO_STOP) TABLESPace cabio_map_fut;

Index created.

SQL> CREATE INDEX ENDS3 ON zstg_endsnparrayrepcytoids(cytobandID) TABLESPace cabio_map_fut
  2  ;

Index created.

SQL> CREATE INDEX ENDS4 ON zstg_endsnparrayrepcytoids(chromosome_ID) TABLESPace
  2  cabio_map_fut;

Index created.

SQL> 
SQL> 
SQL> INSERT
  2    INTO zstg_array_reporter_ch (ID, NAME, microarray_ID, MANUFACTURER_PSR_ID,
  3  PROBE_COUNT, STRAND, transcript_ID, exon_ID, DISCRIMINATOR, BIG_ID,
  4  chromosome_ID, CHR_START, CHR_STOP, ORIG_ID) SELECT DISTINCT A.ID, A.NAME,
  5  A.microarray_ID, A.MANUFACTURER_PSR_ID, A.PROBE_COUNT, A.STRAND, A.transcript_ID
  6  							 ,
  7  	  A.exon_ID, 'ExonArrayReporter' AS DISCRIMINATOR, B.BIG_ID, A.chromosome_ID,
  8  					      A.START_LOCATION, A.STOP_LOCATION, B.ID
  9  					   FROM zstg_exon_reporter A, exon_reporter B
 10  		       WHERE A.NAME = B.NAME AND A.microarray_ID = B.MICROARRAY_ID;

Index created.

SQL> @$LOAD/indexes/array_reporter.cols.sql
SQL> 
SQL> create index ARRAY_RERTER_ID on ARRAY_REPORTER(ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index ARRAY_RERTER_NAME on ARRAY_REPORTER(NAME) PARALLEL NOLOGGING tablespace CABIO_FUT;

4110970 rows created.

SQL> COMMIT;

Commit complete.

SQL> CREATE INDEX REL_LOC_BIGID ON relative_location(BIG_ID) TABLESPace cabio_fut;

Index created.

SQL> create index ARRAY_RERTER_MICROARRAY on ARRAY_REPORTER(MICROARRAY_ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/array_reporter.lower.sql
SQL> 
SQL> create index ARRAY_RERTER_NAME_lwr on ARRAY_REPORTER(lower(NAME)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/transcript_array_reporter.lower.sql
SQL> 
SQL> create index TRANSCRIRTER_NAME_lwr on TRANSCRIPT_ARRAY_REPORTER(lower(NAME)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/transcript_array_reporter.enable.sql
SQL> create unique index SYS_C0021193_idx on TRANSCRIPT_ARRAY_REPORTER
  2  (MICROARRAY_ID,NAME) tablespace CABIO_FUT;

2929263 rows created.

SQL> COMMIT;

Commit complete.

SQL> INSERT
  2    INTO relative_location_ch (ID, ORIENTATION, DISTANCE, gene_ID, SNP_ID,
  3  PROBE_SET_ID, BIG_ID, DISCRIMINATOR) SELECT DISTINCT ID, ORIENTATION, DISTANCE,
  4  			gene_ID, SNP_ID, PROBE_SET_ID, BIG_ID, 'GeneRelativeLocation'
  5  					    FROM gene_relative_location;

Index created.

SQL> CREATE INDEX REL_LOC_BIGID_LWR ON relative_location(LOWER(BIG_ID)) TABLESPace
  2  cabio_fut;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/array_reporter.enable.sql
SQL> create unique index SYS_C0021036_idx on ARRAY_REPORTER
  2  (MICROARRAY_ID,NAME) tablespace CABIO_FUT;

Index created.

SQL> alter table ARRAY_REPORTER enable constraint SYS_C0021036 using index SYS_C0021036_idx;

Table altered.

SQL> create unique index REPORTER_PK_idx on ARRAY_REPORTER
  2  (ID) tablespace CABIO_FUT;
(ID) tablespace CABIO_FUT
 *
ERROR at line 2:
ORA-01408: such column list already indexed


SQL> alter table ARRAY_REPORTER enable constraint REPORTER_PK using index REPORTER_PK_idx;
alter table ARRAY_REPORTER enable constraint REPORTER_PK using index REPORTER_PK_idx
*
ERROR at line 1:
ORA-01418: specified index does not exist


SQL> 
SQL> alter table ARRAY_REPORTER enable constraint SYS_C0021036;

Table altered.

SQL> alter table ARRAY_REPORTER enable constraint SYS_C0021036;

Table altered.

SQL> alter table ARRAY_REPORTER enable constraint SYS_C004158;

Table altered.

SQL> alter table ARRAY_REPORTER enable constraint SYS_C004159;

Index created.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint SYS_C0021193 using index SYS_C0021193_idx;

Table altered.

SQL> create unique index TRANSCRIPT_REPORTER_PK_idx on TRANSCRIPT_ARRAY_REPORTER
  2  (ID) tablespace CABIO_FUT;
(ID) tablespace CABIO_FUT
 *
ERROR at line 2:
ORA-01408: such column list already indexed


SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint TRANSCRIPT_REPORTER_PK using index TRANSCRIPT_REPORTER_PK_idx;
alter table TRANSCRIPT_ARRAY_REPORTER enable constraint TRANSCRIPT_REPORTER_PK using index TRANSCRIPT_REPORTER_PK_idx
*
ERROR at line 1:
ORA-01418: specified index does not exist


SQL> 
SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint SYS_C0021193;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint SYS_C0021193;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint SYS_C004805;

1181707 rows created.

SQL> COMMIT;

Commit complete.

SQL> CREATE INDEX RELATIVE_LOC_BIGID ON relative_location_ch(BIG_ID) TABLESPace
  2  cabio_fut;

Table altered.

SQL> alter table ARRAY_REPORTER enable constraint SYS_C004160;

Table altered.

SQL> alter table ARRAY_REPORTER enable constraint REPORTER_PK;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint SYS_C004806;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint SYS_C004807;

Table altered.

SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable constraint TRANSCRIPT_REPORTER_PK;

Table altered.

SQL> 
SQL> alter table ARRAY_REPORTER enable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> 
SQL> exit;
Disconnected from Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options

Table altered.

SQL> 
SQL> alter table TRANSCRIPT_ARRAY_REPORTER enable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> exit;
Disconnected from Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options

Index created.

SQL> @$LOAD/indexes/relative_location.cols.sql
SQL> 
SQL> create index RELATIVETION_ID on RELATIVE_LOCATION(ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVETION_ORIENTATIO on RELATIVE_LOCATION(ORIENTATION) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVETION_DISTANCE on RELATIVE_LOCATION(DISTANCE) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVETION_SNP_ID on RELATIVE_LOCATION(SNP_ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/relative_location.lower.sql
SQL> 
SQL> create index RELATIVETION_ORIENTATIO_lwr on RELATIVE_LOCATION(lower(ORIENTATION)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> CREATE INDEX RELATIVE_LOC_BIGID_LWR ON relative_location_ch(LOWER(BIG_ID))
  2  TABLESPace cabio_fut;

Index created.

SQL> create index RELATIVETION_DISTANCE_lwr on RELATIVE_LOCATION(lower(DISTANCE)) PARALLEL NOLOGGING tablespace CABIO_FUT;

2808822 rows created.

SQL> COMMIT;

Commit complete.

SQL> 
SQL> ANALYZE TABLE zstg_expression_reporter COMPUTE STATISTICS;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/relative_location.enable.sql
SQL> create unique index REL_LOCATION_PK_idx on RELATIVE_LOCATION
  2  (ID) tablespace CABIO_FUT;
(ID) tablespace CABIO_FUT
 *
ERROR at line 2:
ORA-01408: such column list already indexed


SQL> alter table RELATIVE_LOCATION enable constraint REL_LOCATION_PK using index REL_LOCATION_PK_idx;
alter table RELATIVE_LOCATION enable constraint REL_LOCATION_PK using index REL_LOCATION_PK_idx
*
ERROR at line 1:
ORA-01418: specified index does not exist


SQL> 
SQL> alter table RELATIVE_LOCATION enable constraint SYS_C004713;

Table altered.

SQL> alter table RELATIVE_LOCATION enable constraint SYS_C004714;

Table altered.

SQL> alter table RELATIVE_LOCATION enable constraint SYS_C004715;

Table altered.

SQL> alter table RELATIVE_LOCATION enable constraint REL_LOCATION_PK;

Table analyzed.

SQL> INSERT
  2    INTO zstg_array_reporter_ch (ID, NAME, microarray_ID, sequence_type,
  3  SEQUENCE_source, target_ID, TARGET_DESCRIPTION, gene_ID, nas_ID, chromosome_ID,
  4  CHR_START, CHR_STOP, CYTO_START, CYTO_STOP, DISCRIMINATOR, START_CYTOID,
  5  END_CYTOID, ASSEMBLY, BIG_ID, ORIG_ID) SELECT DISTINCT A.ID, A.NAME,
  6  		A.microarray_ID, A.sequence_type, A.SEQUENCE_source, A.transcript_ID,
  7  	     A.target_DESCRIPTION, A.gene_ID, A.nas_ID, A.chromosome_ID, A.CHR_START,
  8  		  A.CHR_STOP, A.CYTO_START, A.CYTO_STOP, 'ExpressionArrayReporter' AS
  9  		DISCRIMINATOR, B.cytobandID, C.CYTOBANDID, A.ASSEMBLY, D.BIG_ID, D.ID
 10  			 FROM zstg_expression_reporter A, zstg_startexprarrayrepcytoids B,
 11  				      zstg_endexprarrayrepcytoids C, expression_reporter D
 12  WHERE A.ID = B.ID(+) AND A.chromosome_ID = B.CHROMOSOME_ID(+) AND A.CYTO_START
 13   = B.CYTO_START(+) AND A.ID = C.ID(+) AND A.chromosome_ID = C.CHROMOSOME_ID(+)
 14  	AND A.CYTO_STOP = C.CYTO_STOP(+) AND A.NAME = D.NAME AND A.microarray_ID =
 15  						   D.microarray_ID;

Table altered.

SQL> 
SQL> alter table RELATIVE_LOCATION enable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> exit;
Disconnected from Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options

793748 rows created.

SQL> COMMIT;

Commit complete.

SQL> 
SQL> ANALYZE TABLE zstg_snp_reporter COMPUTE STATISTICS;

Index created.

SQL> @$LOAD/indexes/relative_location_ch.lower.sql
SQL> 
SQL> create index RELATIVEN_CH_TYPE_lwr on RELATIVE_LOCATION_CH(lower(TYPE)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_ORIENTATIO_lwr on RELATIVE_LOCATION_CH(lower(ORIENTATION)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_DISTANCE_lwr on RELATIVE_LOCATION_CH(lower(DISTANCE)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_PROBE_SET__lwr on RELATIVE_LOCATION_CH(lower(PROBE_SET_ID)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_DISCRIMINA_lwr on RELATIVE_LOCATION_CH(lower(DISCRIMINATOR)) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/relative_location_ch.cols.sql
SQL> 
SQL> create index RELATIVEN_CH_ID on RELATIVE_LOCATION_CH(ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_TYPE on RELATIVE_LOCATION_CH(TYPE) PARALLEL NOLOGGING tablespace CABIO_FUT;

Table analyzed.

SQL> INSERT
  2  INTO zstg_array_reporter_ch(ID, NAME, microarray_ID, SNP_ID, PHAST_CONSERVATION,
  3  chromosome_ID, CHR_START, CHR_STOP, CYTO_START, CYTO_STOP, DISCRIMINATOR,
  4  START_CYTOID, END_CYTOID, BIG_ID, ORIG_ID) SELECT DISTINCT A.ID, A.NAME,
  5    A.microarray_ID, A.SNP_ID, A.PHAST_CONSERVATION, A.chromosome_ID, A.CHR_START,
  6  	  A.CHR_STOP, A.CYTO_START, A.CYTO_STOP, 'SNPArrayReporter' AS DISCRIMINATOR,
  7  					   B.cytobandID, C.CYTOBANDID, D.BIG_ID, D.ID
  8  		 FROM snp_reporter D, zstg_snp_reporter A, zstg_startsnparrayrepcytoids B,
  9  						       zstg_endsnparrayrepcytoids C
 10  WHERE A.ID = B.ID(+) AND A.chromosome_ID = B.CHROMOSOME_ID(+) AND A.CYTO_START
 11   = B.CYTO_START(+) AND A.ID = C.ID(+) AND A.chromosome_ID = C.CHROMOSOME_ID(+)
 12  	AND A.CYTO_STOP = C.CYTO_STOP(+) AND A.NAME = D.NAME AND A.microarray_ID =
 13  						       D.microarray_ID;

Index created.

SQL> create index RELATIVEN_CH_ORIENTATIO on RELATIVE_LOCATION_CH(ORIENTATION) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_DISTANCE on RELATIVE_LOCATION_CH(DISTANCE) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_SNP_ID on RELATIVE_LOCATION_CH(SNP_ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_PROBE_SET_ on RELATIVE_LOCATION_CH(PROBE_SET_ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_GENE_ID on RELATIVE_LOCATION_CH(GENE_ID) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> create index RELATIVEN_CH_DISCRIMINA on RELATIVE_LOCATION_CH(DISCRIMINATOR) PARALLEL NOLOGGING tablespace CABIO_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/relative_location_ch.enable.sql
SQL> create unique index SYS_C0021179_idx on RELATIVE_LOCATION_CH
  2  (DISCRIMINATOR,GENE_ID,PROBE_SET_ID,SNP_ID,DISTANCE,ORIENTATION,TYPE) tablespace CABIO_FUT;

Index created.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179 using index SYS_C0021179_idx;

Table altered.

SQL> create unique index REL_LOC_CH_PK_idx on RELATIVE_LOCATION_CH
  2  (ID) tablespace CABIO_FUT;
(ID) tablespace CABIO_FUT
 *
ERROR at line 2:
ORA-01408: such column list already indexed


SQL> alter table RELATIVE_LOCATION_CH enable constraint REL_LOC_CH_PK using index REL_LOC_CH_PK_idx;
alter table RELATIVE_LOCATION_CH enable constraint REL_LOC_CH_PK using index REL_LOC_CH_PK_idx
*
ERROR at line 1:
ORA-01418: specified index does not exist


SQL> 
SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C0021179;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint REL_LOC_CH_PK;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C004718;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C004719;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C004720;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C004721;

Table altered.

SQL> alter table RELATIVE_LOCATION_CH enable constraint SYS_C004722;

Table altered.

SQL> 
SQL> alter table RELATIVE_LOCATION_CH enable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> exit;
Disconnected from Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options

2353968 rows created.

SQL> COMMIT;

Commit complete.

SQL> 
SQL> @$LOAD/indexes/zstg_array_reporter_ch.cols.sql
SQL> 
SQL> create index ZSTG_ARRR_CH_ID on ZSTG_ARRAY_REPORTER_CH(ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_NAME on ZSTG_ARRAY_REPORTER_CH(NAME) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_MICROARRAY on ZSTG_ARRAY_REPORTER_CH(MICROARRAY_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_DISCRIMINA on ZSTG_ARRAY_REPORTER_CH(DISCRIMINATOR) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_SEQUENCE_T on ZSTG_ARRAY_REPORTER_CH(SEQUENCE_TYPE) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_SEQUENCE_S on ZSTG_ARRAY_REPORTER_CH(SEQUENCE_SOURCE) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_TARGET_ID on ZSTG_ARRAY_REPORTER_CH(TARGET_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_TARGET_DES on ZSTG_ARRAY_REPORTER_CH(TARGET_DESCRIPTION) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_PHAST_CONS on ZSTG_ARRAY_REPORTER_CH(PHAST_CONSERVATION) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_MANUFACTUR on ZSTG_ARRAY_REPORTER_CH(MANUFACTURER_PSR_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_PROBE_COUN on ZSTG_ARRAY_REPORTER_CH(PROBE_COUNT) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_STRAND on ZSTG_ARRAY_REPORTER_CH(STRAND) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_SNP_ID on ZSTG_ARRAY_REPORTER_CH(SNP_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_NAS_ID on ZSTG_ARRAY_REPORTER_CH(NAS_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_GENE_ID on ZSTG_ARRAY_REPORTER_CH(GENE_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_TRANSCRIPT on ZSTG_ARRAY_REPORTER_CH(TRANSCRIPT_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_EXON_ID on ZSTG_ARRAY_REPORTER_CH(EXON_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_CHR_START on ZSTG_ARRAY_REPORTER_CH(CHR_START) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_CHR_STOP on ZSTG_ARRAY_REPORTER_CH(CHR_STOP) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_CYTO_START on ZSTG_ARRAY_REPORTER_CH(CYTO_START) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_CYTO_STOP on ZSTG_ARRAY_REPORTER_CH(CYTO_STOP) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_CHROMOSOME on ZSTG_ARRAY_REPORTER_CH(CHROMOSOME_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_START_CYTO on ZSTG_ARRAY_REPORTER_CH(START_CYTOID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_END_CYTOID on ZSTG_ARRAY_REPORTER_CH(END_CYTOID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_ASSEMBLY on ZSTG_ARRAY_REPORTER_CH(ASSEMBLY) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> create index ZSTG_ARRR_CH_ORIG_ID on ZSTG_ARRAY_REPORTER_CH(ORIG_ID) PARALLEL NOLOGGING tablespace CABIO_MAP_FUT;

Index created.

SQL> 
SQL> --EXIT;
SQL> ANALYZE TABLE zstg_array_reporter_ch COMPUTE STATISTICS;

Table analyzed.

SQL> 
SQL> INSERT
  2    INTO array_reporter_ch(ID, NAME, microarray_ID, DISCRIMINATOR, sequence_type,
  3  SEQUENCE_source, target_ID, TARGET_DESCRIPTION, PHAST_CONSERVATION,
  4  MANUFACTURER_PSR_ID, PROBE_COUNT, STRAND, SNP_ID, nas_ID, gene_ID, transcript_ID
  5  ,
  6    exon_ID, BIG_ID) SELECT DISTINCT A.ORIG_ID, A.NAME, A.microarray_ID,
  7  		    A.DISCRIMINATOR, A.sequence_type, A.SEQUENCE_source, A.target_ID,
  8  A.target_DESCRIPTION, A.PHAST_CONSERVATION, A.MANUFACTURER_PSR_ID, A.PROBE_COUNT
  9  			       ,
 10  	A.STRAND, A.SNP_ID, A.nas_ID, A.gene_ID, A.transcript_ID, A.exon_ID, A.BIG_ID
 11  			  FROM zstg_array_reporter_ch A;

3051906 rows created.

SQL> COMMIT;

Commit complete.

SQL> CREATE INDEX AR_REP_CH_BIGID ON array_reporter_ch(BIG_ID) TABLESPace cabio_fut;

Index created.

SQL> CREATE INDEX AR_REP_CH_BIGID_LWR ON array_reporter_ch(LOWER(BIG_ID)) TABLESPace
  2  cabio_fut;

Index created.

SQL> @$LOAD/indexes/array_reporter_ch.cols.sql
SQL> 
SQL> create index ARRAY_RER_CH_ID on ARRAY_REPORTER_CH(ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_NAME on ARRAY_REPORTER_CH(NAME) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_MICROARRAY on ARRAY_REPORTER_CH(MICROARRAY_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_DISCRIMINA on ARRAY_REPORTER_CH(DISCRIMINATOR) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_SEQUENCE_T on ARRAY_REPORTER_CH(SEQUENCE_TYPE) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_SEQUENCE_S on ARRAY_REPORTER_CH(SEQUENCE_SOURCE) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_TARGET_ID on ARRAY_REPORTER_CH(TARGET_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_TARGET_DES on ARRAY_REPORTER_CH(TARGET_DESCRIPTION) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_PHAST_CONS on ARRAY_REPORTER_CH(PHAST_CONSERVATION) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_MANUFACTUR on ARRAY_REPORTER_CH(MANUFACTURER_PSR_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_PROBE_COUN on ARRAY_REPORTER_CH(PROBE_COUNT) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_STRAND on ARRAY_REPORTER_CH(STRAND) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_SNP_ID on ARRAY_REPORTER_CH(SNP_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_NAS_ID on ARRAY_REPORTER_CH(NAS_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_GENE_ID on ARRAY_REPORTER_CH(GENE_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_TRANSCRIPT on ARRAY_REPORTER_CH(TRANSCRIPT_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_EXON_ID on ARRAY_REPORTER_CH(EXON_ID) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/indexes/array_reporter_ch.lower.sql
SQL> 
SQL> create index ARRAY_RER_CH_NAME_lwr on ARRAY_REPORTER_CH(lower(NAME)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_DISCRIMINA_lwr on ARRAY_REPORTER_CH(lower(DISCRIMINATOR)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_SEQUENCE_T_lwr on ARRAY_REPORTER_CH(lower(SEQUENCE_TYPE)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_SEQUENCE_S_lwr on ARRAY_REPORTER_CH(lower(SEQUENCE_SOURCE)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_TARGET_ID_lwr on ARRAY_REPORTER_CH(lower(TARGET_ID)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_TARGET_DES_lwr on ARRAY_REPORTER_CH(lower(TARGET_DESCRIPTION)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_PHAST_CONS_lwr on ARRAY_REPORTER_CH(lower(PHAST_CONSERVATION)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_MANUFACTUR_lwr on ARRAY_REPORTER_CH(lower(MANUFACTURER_PSR_ID)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_PROBE_COUN_lwr on ARRAY_REPORTER_CH(lower(PROBE_COUNT)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> create index ARRAY_RER_CH_STRAND_lwr on ARRAY_REPORTER_CH(lower(STRAND)) PARALLEL NOLOGGING tablespace cabio_fut;

Index created.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/zstg_array_reporter_ch.enable.sql
SQL> 
SQL> alter table ZSTG_ARRAY_REPORTER_CH enable constraint SYS_C004837;

Table altered.

SQL> alter table ZSTG_ARRAY_REPORTER_CH enable constraint SYS_C004838;

Table altered.

SQL> alter table ZSTG_ARRAY_REPORTER_CH enable constraint SYS_C004839;

Table altered.

SQL> 
SQL> --EXIT;
SQL> @$LOAD/constraints/array_reporter_ch.enable.sql
SQL> create unique index SYS_C0021037_idx on ARRAY_REPORTER_CH
  2  (DISCRIMINATOR,MICROARRAY_ID,NAME) tablespace CABIO_FUT;

Index created.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C0021037 using index SYS_C0021037_idx;

Table altered.

SQL> create unique index ARCHPK_idx on ARRAY_REPORTER_CH
  2  (ID) tablespace CABIO_FUT;
(ID) tablespace CABIO_FUT
 *
ERROR at line 2:
ORA-01408: such column list already indexed


SQL> alter table ARRAY_REPORTER_CH enable constraint ARCHPK using index ARCHPK_idx;
alter table ARRAY_REPORTER_CH enable constraint ARCHPK using index ARCHPK_idx
*
ERROR at line 1:
ORA-01418: specified index does not exist


SQL> 
SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C0021037;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C0021037;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C0021037;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C004162;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C004163;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C004164;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint SYS_C004165;

Table altered.

SQL> alter table ARRAY_REPORTER_CH enable constraint ARCHPK;

Table altered.

SQL> 
SQL> alter table ARRAY_REPORTER_CH enable primary key;

Table altered.

SQL> 
SQL> --EXIT;
SQL> ANALYZE TABLE array_reporter_ch COMPUTE STATISTICS;

Table analyzed.

SQL> exit;
Disconnected from Oracle Database 10g Enterprise Edition Release 10.2.0.4.0 - 64bit Production
With the Partitioning, Data Mining and Real Application Testing options
