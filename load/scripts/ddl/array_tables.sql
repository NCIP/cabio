
DROP TABLE POPULATION_FREQUENCY;
DROP TABLE PROTEIN_DOMAIN;
DROP TABLE GENE_RELATIVE_LOCATION;
DROP TABLE MARKER_MARKER_REL_LOCATION;
DROP TABLE MARKER_RELATIVE_LOCATION;
DROP TABLE MARKER;
DROP TABLE EXPRESSION_REPORTER;
DROP TABLE SNP_REPORTER;
DROP TABLE EXON_REPORTER_GENE;
DROP TABLE EXON_REPORTER;
DROP TABLE EXON;
DROP TABLE TRANSCRIPT_GENE;
DROP TABLE TRANSCRIPT;
DROP TABLE MICROARRAY;
DROP TABLE REPORTER;
DROP TABLE TRANSCRIPT_REPORTER;
DROP TABLE RELATIVE_LOCATION;

  
CREATE TABLE MICROARRAY
(
  ID              NUMBER         NOT NULL,
  ARRAY_NAME      VARCHAR2(50)   NOT NULL,
  ANNOTATION_DATE DATE,
  GENOME_VERSION  VARCHAR2(100),
  DBSNP_VERSION   VARCHAR2(100),
  PLATFORM        VARCHAR2(50),
  TYPE            VARCHAR2(50),
  BIG_ID          VARCHAR2(200),
  CONSTRAINT microarray_pk PRIMARY KEY (id)
);

CREATE TABLE ARRAY_REPORTER
(
  ID                 NUMBER          NOT NULL,
  NAME               VARCHAR2(50),
  MICROARRAY_ID      NUMBER,
  BIG_ID             VARCHAR2(200),
  CONSTRAINT reporter_pk PRIMARY KEY (id)
);

CREATE TABLE TRANSCRIPT_ARRAY_REPORTER
(
  ID                 NUMBER          NOT NULL,
  NAME               VARCHAR2(50),
  MICROARRAY_ID      NUMBER,
  BIG_ID             VARCHAR2(200),
  CONSTRAINT transcript_reporter_pk PRIMARY KEY (id)
);
  
CREATE TABLE EXPRESSION_REPORTER
(
  ID                 NUMBER          NOT NULL,
  NAME               VARCHAR2(50),
  MICROARRAY_ID      NUMBER,
  SEQUENCE_TYPE      VARCHAR2(20),
  SEQUENCE_SOURCE    VARCHAR2(50),
  TRANSCRIPT_ID      VARCHAR2(100),
  TARGET_DESCRIPTION VARCHAR2(2000),
  GENE_ID            NUMBER,
  NAS_ID             NUMBER,
  BIG_ID             VARCHAR2(200),
  CONSTRAINT expr_reporter_pk PRIMARY KEY (id)
);

ALTER TABLE EXPRESSION_REPORTER ADD CONSTRAINT ER_MICROARRAY_FK
FOREIGN KEY (MICROARRAY_ID) REFERENCES MICROARRAY (ID);

ALTER TABLE EXPRESSION_REPORTER ADD CONSTRAINT ER_GENE_FK
FOREIGN KEY (GENE_ID) REFERENCES GENE_TV (GENE_ID);

ALTER TABLE EXPRESSION_REPORTER ADD CONSTRAINT ER_NAS_FK
FOREIGN KEY (NAS_ID) REFERENCES NUCLEIC_ACID_SEQUENCE (ID);

CREATE TABLE PROTEIN_DOMAIN
(
  ID                 NUMBER          NOT NULL,
  ACCESSION_NUMBER   VARCHAR2(20),
  DESCRIPTION        VARCHAR2(2000),
  TYPE               VARCHAR2(200)   NOT NULL,
  BIG_ID             VARCHAR2(200),
  CONSTRAINT protein_domain_pk PRIMARY KEY (id)
);

CREATE TABLE EXPR_REPORTER_PROTEIN_DOMAIN
(
  EXPR_REPORTER_ID     NUMBER  NOT NULL,
  PROTEIN_DOMAIN_ID    NUMBER  NOT NULL
);

ALTER TABLE EXPR_REPORTER_PROTEIN_DOMAIN ADD CONSTRAINT ERPD_ER_ID
FOREIGN KEY (EXPR_REPORTER_ID) REFERENCES EXPRESSION_REPORTER (ID);

ALTER TABLE EXPR_REPORTER_PROTEIN_DOMAIN ADD CONSTRAINT ERPD_PD_ID
FOREIGN KEY (PROTEIN_DOMAIN_ID) REFERENCES PROTEIN_DOMAIN (ID);

CREATE TABLE SNP_REPORTER
(
  ID                   NUMBER         NOT NULL,
  NAME                 VARCHAR2(50),
  MICROARRAY_ID        NUMBER,
  SNP_ID               NUMBER,
  PHAST_CONSERVATION   VARCHAR2(30),
  BIG_ID               VARCHAR2(200),
  CONSTRAINT snp_reporter_pk PRIMARY KEY (id)
);

ALTER TABLE SNP_REPORTER ADD CONSTRAINT SR_MICROARRAY_FK
FOREIGN KEY (MICROARRAY_ID) REFERENCES MICROARRAY (ID);

ALTER TABLE SNP_REPORTER ADD CONSTRAINT SR_SNP_TV_FK
FOREIGN KEY (SNP_ID) REFERENCES SNP_TV (ID);

CREATE TABLE TRANSCRIPT
(
  ID                 NUMBER          NOT NULL,
  MANUFACTURER_ID    VARCHAR2(20),
  SOURCE             VARCHAR2(20),
  STRAND             VARCHAR2(20),
  PROBE_COUNT        VARCHAR2(20),
  BIG_ID             VARCHAR2(200),
  CONSTRAINT transcript_pk PRIMARY KEY (id)
);

CREATE TABLE TRANSCRIPT_GENE
(
  TRANSCRIPT_ID     NUMBER  NOT NULL,
  GENE_ID           NUMBER  NOT NULL
);

ALTER TABLE TRANSCRIPT_GENE ADD CONSTRAINT TG_TRANSCRIPT_FK
FOREIGN KEY (TRANSCRIPT_ID) REFERENCES TRANSCRIPT (ID);

ALTER TABLE TRANSCRIPT_GENE ADD CONSTRAINT TG_GENE_FK
FOREIGN KEY (GENE_ID) REFERENCES GENE_TV (GENE_ID);

CREATE TABLE EXON
(
  ID                 NUMBER          NOT NULL,
  MANUFACTURER_ID    VARCHAR2(20),
  SOURCE             VARCHAR2(20),
  TRANSCRIPT_ID      NUMBER,
  BIG_ID             VARCHAR2(200),
  CONSTRAINT exon_pk PRIMARY KEY (id)
);

ALTER TABLE EXON ADD CONSTRAINT EXON_TRANSCRIPT_FK
FOREIGN KEY (TRANSCRIPT_ID) REFERENCES TRANSCRIPT (ID);

CREATE TABLE EXON_REPORTER
(
  ID                  NUMBER          NOT NULL,
  NAME                VARCHAR2(50),
  MICROARRAY_ID       NUMBER,
  MANUFACTURER_PSR_ID VARCHAR2(20),
  PROBE_COUNT         VARCHAR2(20),
  STRAND              VARCHAR2(20),
  TRANSCRIPT_ID       NUMBER,
  EXON_ID             NUMBER,
  BIG_ID              VARCHAR2(200),
  CONSTRAINT exon_reporter_pk PRIMARY KEY (id)
);

ALTER TABLE EXON_REPORTER ADD CONSTRAINT EX_MICROARRAY_FK
FOREIGN KEY (MICROARRAY_ID) REFERENCES MICROARRAY (ID);

ALTER TABLE EXON_REPORTER ADD CONSTRAINT EX_TRANSCRIPT_FK
FOREIGN KEY (TRANSCRIPT_ID) REFERENCES TRANSCRIPT (ID);

ALTER TABLE EXON_REPORTER ADD CONSTRAINT EX_EXON_FK
FOREIGN KEY (EXON_ID) REFERENCES EXON (ID);

CREATE TABLE EXON_REPORTER_GENE
(
  EXON_REPORTER_ID     NUMBER  NOT NULL,
  GENE_ID              NUMBER  NOT NULL
);

ALTER TABLE EXON_REPORTER_GENE ADD CONSTRAINT ERG_ER_FK
FOREIGN KEY (EXON_REPORTER_ID) REFERENCES EXON_REPORTER (ID);

ALTER TABLE EXON_REPORTER_GENE ADD CONSTRAINT ERG_GENE_FK
FOREIGN KEY (GENE_ID) REFERENCES GENE_TV (GENE_ID);

CREATE TABLE MARKER
(
  ID                 NUMBER        NOT NULL,
  NAME               VARCHAR2(20),
  MARKER_ID          VARCHAR2(20),
  TYPE               VARCHAR2(100) NOT NULL,
  BIG_ID             VARCHAR2(200),
  CONSTRAINT marker_pk PRIMARY KEY (id)
);

CREATE TABLE MARKER_RELATIVE_LOCATION
(
  ID            NUMBER            NOT NULL,
  TYPE          VARCHAR2(50),
  ORIENTATION   VARCHAR2(50),
  DISTANCE      VARCHAR2(50),
  SNP_ID        NUMBER            NOT NULL,
  PROBE_SET_ID  VARCHAR2(100),
  BIG_ID        VARCHAR2(200),
  CONSTRAINT marker_rl_pk PRIMARY KEY (id)
);

ALTER TABLE MARKER_RELATIVE_LOCATION ADD CONSTRAINT MRL_SNP_FK
FOREIGN KEY (SNP_ID) REFERENCES SNP_TV (ID);

CREATE TABLE MARKER_MARKER_REL_LOCATION
(
  MARKER_ID               NUMBER  NOT NULL,
  MARKER_REL_LOCATION_ID  NUMBER  NOT NULL,
  SORT_ORDER              NUMBER
);

ALTER TABLE MARKER_MARKER_REL_LOCATION ADD CONSTRAINT MMRL_MI_FK
FOREIGN KEY (MARKER_ID) REFERENCES MARKER (ID);

ALTER TABLE MARKER_MARKER_REL_LOCATION ADD CONSTRAINT MMRL_MRLI_FK
FOREIGN KEY (MARKER_REL_LOCATION_ID) REFERENCES MARKER_RELATIVE_LOCATION (ID);

CREATE TABLE GENE_RELATIVE_LOCATION
(
  ID            NUMBER               NOT NULL,
  ORIENTATION   VARCHAR2(50),
  DISTANCE      VARCHAR2(20),
  GENE_ID       NUMBER,
  SNP_ID        NUMBER,
  PROBE_SET_ID  VARCHAR2(100),
  BIG_ID        VARCHAR2(200),
  CONSTRAINT gene_rl_pk PRIMARY KEY (id)
);

ALTER TABLE GENE_RELATIVE_LOCATION ADD CONSTRAINT GRL_SNP_FK
FOREIGN KEY (SNP_ID) REFERENCES SNP_TV (ID);

CREATE TABLE POPULATION_FREQUENCY
(
  ID                     NUMBER            NOT NULL,
  TYPE                   VARCHAR2(50)      NOT NULL,
  ETHNICITY              VARCHAR2(50),
  MAJOR_FREQUENCY        NUMBER,
  MINOR_FREQUENCY        NUMBER,
  HETEROZYGOUS_FREQUENCY NUMBER,
  SNP_ID                 NUMBER,
  MAJOR_ALLELE           VARCHAR2(30),
  MINOR_ALLELE           VARCHAR2(30),
  BIG_ID                 VARCHAR2(200),
  SNP_PROBESET_AFFY_ID   VARCHAR2(100)
);

ALTER TABLE POPULATION_FREQUENCY ADD CONSTRAINT PF_SNP_FK
FOREIGN KEY (SNP_ID) REFERENCES SNP_TV (ID);

ALTER TABLE POPULATION_FREQUENCY ADD CONSTRAINT PF_SNP_PK
PRIMARY KEY (ID); 

CREATE TABLE RELATIVE_LOCATION
(
  ID            NUMBER            NOT NULL,
  ORIENTATION   VARCHAR2(50),
  DISTANCE      VARCHAR2(50),
  SNP_ID        NUMBER            NOT NULL,
  BIG_ID        VARCHAR2(200),
  CONSTRAINT rel_location_pk PRIMARY KEY (id)
);
