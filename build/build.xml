<?xml version="1.0" encoding="utf-8" ?>

<project name="cabio" default="dist:all" basedir=".">
	<description>
	This is the master build file for the caBIO project.  caBIO portlet, caBIO API and caBIO grid service are three sub-projects
	</description>

	<!-- Property file related properties and tasks -->
	<property name="software.dir" location=".." />
	<property name="common.dir" location="${software.dir}/common" />
	<property name="target.dir" location="${software.dir}/target" />
	<property name="dist.dir" location="${target.dir}/dist" />

	<!-- Paths -->
	<path id="common.classpath">
		<fileset dir="${common.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>
	<taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="common.classpath" />

	<!--<property name="tier" value="qa"/>-->
	<if>
		<isset property="tier" />
		<then>
			<!-- if tier is defined, load tier specific properties for tier based installation -->
			<property file="${tier}.properties" />
			<echo message="loaded ${tier} tier properties." />
		</then>
		<else>
			<property file="build.properties" />
			<echo message="loaded build.properties" />
		</else>
	</if>
	<property file="default.properties" />
	<property file="project.properties" />

	<!-- Properties that relate to how to call build targets from sub-projects-->
	<!-- Working directory passed to Ant tasks -->
	<property name="cabio-portlet.base.dir" location="${software.dir}/cabio-portlets" />
	<property name="cabio-api.base.dir" location="${software.dir}/cabio-api" />
	<property name="cabio-grid.base.dir" location="${software.dir}/cabio-gridservice" />

	<!-- Build file names relative working dir above, if the basedir of the sub-project ant script is ".." you should set the *.basdir to and the build file should include the dir and build file name from the *.base.dir -->
	<property name="cabio-api.build.file" value="build.xml" />
	<property name="cabio-grid.build.file" value="build.xml" />
	<property name="cabio-portlet.build.file" value="build.xml" />

	<!-- The target name that should be called from the sub-project build file -->
	<property name="cabio-api.build.target" value="dist" />
	<property name="cabio-portlet.build.target" value="dist" />
	<property name="cabio-grid.build.target" value="distWebApp" />

	<!-- Distribution Structure properties, used to copy files into the distribution area.
       		Use project.propertie relative dir names becasue they are used by install also-->
	<property name="dist.exploded.dir" location="${dist.dir}/exploded" />
	<property name="cabio-portlet.dist.dir" location="${dist.exploded.dir}/cabio-portlets" />
	<property name="cabio-api.dist.dir" location="${dist.exploded.dir}/cabio-api" />
	<property name="common.dist.dir" location="${dist.exploded.dir}/common" />

	<target name="clean">
		<delete dir="${dist.dir}" />
	</target>

	<!-- the init targets for the portlet and API are handled by the subproject build files already-->
	<target name="dist:cabio-portlet" description="Call portlet sub-project build target to produce build artifiacts">
		<!-- setting the property in the ant call overrides the property in the sub-project allowing the artifact to be produced where needed -->
		<ant antfile="${cabio-portlet.build.file}" target="${cabio-portlet.build.target}" dir="${cabio-portlet.base.dir}">
			<!--overwrite distribution directory for the war file-->
			<property name="dist.dir" location="${cabio-portlet.dist.dir}" />
			<property name="portlet.build.svn.url" value="${build.svn.url}" />
			<property name="portlet.build.svn.revision" value="${build.svn.revision}" />
		</ant>
	</target>


	<propertyset id="properties-to-inherit">
		<propertyref prefix="build." />
		<propertyref prefix="webapp." />
		<propertyref prefix="display." />
		<propertyref prefix="cacoresdk." />
		<propertyref prefix="database." />
		<propertyref prefix="jboss." />
		<propertyref prefix="sdk." />
		<propertyref prefix="package." />
		<propertyref regex="^(.*)\.path$$" />
	</propertyset>

	<!-- the init targets for the portlet and API are handled by the subproject build files already-->
	<target name="dist:cabio-api" description="Call api sub-project build target to produce build artifiacts">
		<!-- setting the property in the ant call overrides the property in the sub-project allowing the artifact to be produced where needed -->
		<ant antfile="${cabio-api.base.dir}/${cabio-api.build.file}" target="${cabio-api.build.target}" inheritAll="false">
			<!--overwrite distribution directory for the war file-->
			<property name="api.dist.dir" location="${cabio-api.dist.dir}" />
			<property name="common.dist.dir" location="${common.dist.dir}" />
			<propertyset refid="properties-to-inherit"/>
		</ant>
	</target>

	<target name="dist:all" description="Builds all the sub projects, putting artifacts in the project level target directory, and distribute targets to make distributions" depends="clean, dist:cabio-portlet, dist:cabio-api" />

	<target name="deploy:cabio-portlet">
		<ant antfile="${cabio-portlet.build.file}" target="deploy" dir="${cabio-portlet.base.dir}">
			<property name="dist.dir" location="${cabio-portlet.dist.dir}" />
			<property name="portlet.build.svn.url" value="${build.svn.url}" />
			<property name="portlet.build.svn.revision" value="${build.svn.revision}" />
		</ant>
	</target>

	<target name="deploy:cabio-api">
		<ant antfile="${cabio-api.base.dir}/${cabio-api.build.file}" target="deploy" inheritAll="false">
			<property name="api.dist.dir" location="${cabio-api.dist.dir}" />
			<property name="common.dist.dir" location="${common.dist.dir}" />
			<propertyset refid="properties-to-inherit"/>
		</ant>
	</target>
</project>
